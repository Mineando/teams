buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'io.github.goooler.shadow' version '8.1.8'
    id 'kr.entree.spigradle' version '2.4.3'
    id 'io.freefair.lombok' version '8.6'
    id 'java'
    id 'jacoco'
    id 'idea'
    id 'maven-publish'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

if (project.hasProperty("local_script")) {
    apply from: file(local_script + "/build.local.gradle")
}

sourceCompatibility = '21'
targetCompatibility = '21'

ext {
    mcVersion = project.property("mcVersion")
}

group project.property("group")

spigot {
    name = project.property("pluginName")
    authors = [project.property("author")]
    apiVersion = project.property("apiVersion")
    load = STARTUP
    // depends = ['']
    softDepends = ['Vault']
    excludeLibraries = ['*']
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    spigot()
    bungeecord()
    paper()
    essentialsX()
    bStats()
    enginehub()
    protocolLib()
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    jitpack()
}

dependencies {
    // using using paper-api
    implementation paper(mcVersion)

    // Add your dependencies here
    // Here are some opinionated dependencies that might help you with your plugin development:

    // Annotation Command Framework: https://github.com/aikar/commands
    // Use shadow to shade the library into your plugin
    shadow "co.aikar:acf-paper:0.5.1-SNAPSHOT"
    // Vault (https://github.com/MilkBowl/VaultAPI) for economy, permissions and chat API
    // this dependency needs to be present at runtime, meaning Vault.jar needs to be in your plugins folder
    implementation vaultAll()

    // Triumph GUI
    implementation("dev.triumphteam:triumph-gui:3.1.10")

    // Adventure API
    implementation 'net.kyori:adventure-api:4.17.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.3.3'

    // HikariCP
    implementation 'com.zaxxer:HikariCP:6.0.0'

    implementation 'org.mariadb.jdbc:mariadb-java-client:3.4.1'

    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.19:2.144.3'
    testImplementation 'org.assertj:assertj-core:3.24.1'
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath, project.configurations.shadow]
    relocate 'co.aikar.commands', "${packageName}.acf"
    relocate 'co.aikar.locales', "${packageName}.locales"
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)
tasks.prepareSpigotPlugins.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    ignoreFailures = false
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

jar {
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/${System.getenv("GITHUB_REPOSITORY") ?: project.findProperty("github.repository")}")
            credentials {
                username = System.getenv("GITHUB_ACTOR") ?: project.findProperty("gpr.user")
                password = System.getenv("GITHUB_TOKEN") ?: project.findProperty("gpr.key")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            version = project.version
        }
    }
}

defaultTasks 'build'
